<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Mandelbrot!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Reverse engineering UML osztálydiagram</title>
        <para> A feladatban az első védési program C++ kódjából kellett UML osztálydiagramot
            generálnunk. Az UML egy grafikus modellező nyelv, amely diagramokat tartalmaz. A
            diagramok dobozokat, szövegeket, ikonokat és vonalakat foglalja magába. Az UML
            generálásához a Visual Paradigm alkalmazást használtam. Nekem ezt a diagramot alkotta: </para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="reverse_engineering.jpg"></imagedata>
            </imageobject>
        </mediaobject>
        <para> Az ábrán a kék dobozok az osztályok, tehát a Csomopont, az LZWBinFa és a GLOBAL.
            Közvetlenül az osztályok neve alatt találhatóak a változók. Az elérhetőségüket egy -, +
            vagy egy # jelöli. A - jelenti a private-ot, a + a publicot és a # a protectedet. A
            változók után egy vízszintes vonallal elválasztva következnek az osztály metódusai. Az
            elérhetőség itt is ugyanúgy van jelölve. A törzse mindegyiknek üresen van hagyva, hiszen
            ez csak egy modell, nem kell kódot írni bele, sőt nem is lehet. </para>
        <para> Az asszociáció társítást jelent. A legegyszerűbb fajtája az osztályok között rajzolt
            egyszerű vonal. Azt jelenti valamilyen kapcsolat áll fent a két osztály között. A vonal
            végén ha nyíl van az az asszociáció irányát, navigálhatóságát jelzi. Ha nincs nyíl akkor
            a kapcsolat két irányú. Egy X-el jelöljük a nyilat, ha az asszociáció nem navigálható. </para>
        <para> Az asszociáción belül megkülönböztetjük a tartalmazást, amelynek két fajtája van,
            gyenge és erős. A gyenge tartalmazást nevezzük aggregációnak. Ezt akkor mondhatjuk
            amikor a rész hozzátartozik valamihez, de létezik önállóan is. Jele az UML-ben az üres
            rombusz. Az erős tartalmazást nevezzük kompozíciónak. Ekkor a tartalmazott nem létezhet
            önmagában, csak részként valamiben. Ennek jele a telített rombusz. Ez látható is a
            generált diagramon. Itt azt fejezi ki, hogy a Csomopont osztály az LZWBinFa osztály
            része és nem létezhet nélküle. </para>
    </section>
    
    <section>
        <title>Forward engineering UML osztálydiagram</title>
        <para>
            
        </para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="forward_engineering.jpg"></imagedata>
            </imageobject>
        </mediaobject>
        <programlisting language="java">
<![CDATA[public abstract class Prism {

	private double height;

	public Prism() {
		// TODO - implement Prism.Prism
		throw new UnsupportedOperationException();
	}

	public void getHeight() {
		// TODO - implement Prism.getHeight
		throw new UnsupportedOperationException();
	}

	public void getArea() {
		// TODO - implement Prism.getArea
		throw new UnsupportedOperationException();
	}

	public void volume() {
		// TODO - implement Prism.volume
		throw new UnsupportedOperationException();
	}

	private void bigger() {
		// TODO - implement Prism.bigger
		throw new UnsupportedOperationException();
	}
}]]>
        </programlisting>
        <programlisting language="java">
<![CDATA[public class Cuboid extends Prism {

	private double a;
	private double b;

	public Cuboid() {
		// TODO - implement Cuboid.Cuboid
		throw new UnsupportedOperationException();
	}

	public void getArea() {
		// TODO - implement Cuboid.getArea
		throw new UnsupportedOperationException();
	}

	public void toString() {
		// TODO - implement Cuboid.toString
		throw new UnsupportedOperationException();
	}
}]]>
        </programlisting>
    </section>

    <section>
        <title>Egy esettan</title>
        <para>
            
        </para>
    </section>
    
    <section>
        <title>BPMN</title>
        <para>
            A BPMN a Business Process Model and Notation rövidítése. Ez egy grafikus ábrázolás
            hasonló az UML-hez, az üzleti folyamatok modelljének meghatározására szolgál.
            A BPMN célja, hogy támogassa az üzleti folyamatok menedzselését, mind a műszaki
            felhasználók, mind az üzleti felhasználók számára. Egy szabványos jelölést
            biztosít, amely mindenkinek egyaránt könnyen érthető. Tehát egy közös nyelvként
            szolgál, áthidalva az üzleti folyamatok tervezése és megvalósítása között gyakran
            felmerülő kommunikációs rést.
        </para>
        <mediaobject>
            <imageobject>
                <imagedata fileref="bpmn.jpg"></imagedata>
            </imageobject>
        </mediaobject>
        <para>
            Ez a példa egy hétköznapi folyamatot ír le, a taxi rendelés menetét. Az utas
            felhívja a taxi társaságot, ahol az elosztó központtal információt cserélnek.
            Az elosztó központ továbbítja a címet a legközelebbi sofőrnek. A sofőr felveszi
            az utast elviszi a megadott helyre. Az utas kifizeti az útiköltséget és vége.
            Persze ez elég egyszerű példa, sokkal komolyabbakat is lehet modellezni.
        </para>
    </section>
    
    <section>
        <title>BPEL Helló, Világ!</title>
        <para>
            <link xlink:href="https://youtu.be/eawsm8fb3iY">https://youtu.be/eawsm8fb3iY</link>
        </para>
        <para>
            Létre kellett hoznunk egy webszervert, amelynek egy stringet megadva ugyanazt a
            stringet dobja vissza. Egy 5 perces videóban meg is csináltam ezt. Azonban 
            voltak előkészületek, mivel már egy depracated feladatról van szó. Először is 
            hozzá kellett adnom az Eclipse-hez a BPEL pluginokat. Másodszor fel kellett
            telepíteni az Apache Tomcatet hozzáadva az ode kiegészítőt. Ezután a videó
            alapján megcsináltam a szervert, de szembesültem azzal, hogy nincs Web Servicies
            Explorer-em. Elég nehezen találtam meg, hogy az axis2 plugin tartalmazza ezt a
            funciót.
        </para>
        <para>
            A BPEL nyelvről még mondanék egy pár szót. A BPEL a Business Process Execution
            Language rövidítése. Ez az üzleti folyamatok leírására és webszerverrel kapcsolatos
            műveletekhez használják. A folyamatok a BPEL-ben az információt csak a webszolgáltatási
            felületek felhasználásával fogadják és továbbítják.
        </para>
    </section>
    
    <section>
        <title>TeX UML</title>
        <para>
            
        </para>
    </section>
</chapter>
